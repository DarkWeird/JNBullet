buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        dependencies {
            classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.0.0')
        }
//        maven {
//            url "http://localhost:8081/artifactory/jcenter" // The Artifactory (preferably virtual) repository to resolve from
//        }
    }
}

apply plugin: 'base'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

group = 'org.terasology'

task zipNatives(type: Zip) {
    description 'Creates a zip archive that contains all TeraBullet native files'

    from ('linux_amd64_gcc') {
        include '*Linux*'
        into 'linux'
    }
    
    from ('linux_i386_gcc') {
        include '*Linux*'
        into 'linux'
    }

    from ('linux_windows_amd64_mingw32') {
        include '*Windows*'
        into 'windows'
    }
    
    from ('linux_windows_i686_mingw32') {
        include '*Windows*'
        into 'windows'
    }

  //  from ('natives') {
   //     include '*Darwin*'
   //     into 'macosx'
   // }

    destinationDir = file(buildDir)
    baseName = 'native-bullet'
}

artifactoryPublish {
    dependsOn zipNatives
}


// A configuration for publishing artifacts
configurations {
    published
}


publishing {
    publications {
        zippedNatives(MavenPublication) {
            artifact zipNatives
            artifactId 'native-bullet'
        }
    }
}


artifactory {
    contextUrl = 'http://artifactory.terasology.org/artifactory'
    publish {
        repository {
            repoKey = 'terasology-snapshot-local' // The Artifactory repository key to publish to
            ivy {
                ivyLayout = '[organization]/[module]/ivy-[revision].xml'
                artifactLayout = '[organization]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]'
                mavenCompatible = true
                //Convert any dots in an [organization] layout value to path separators, similar to Maven's groupId-to-path conversion. True if not specified
            }
        }
        defaults {
            publishConfigs('archives', 'published')
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('zippedNatives')
            publishArtifacts = true
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}
