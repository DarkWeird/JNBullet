apply plugin: 'cpp-library'

library {
	baseName = "bullet"
	targetMachines = [
			machines.windows,
			machines.linux,
			machines.macOS
	]

	binaries.configureEach {
		def compileTask = compileTask.get()
		compileTask.compilerArgs.add("-DBT_NO_PROFILE")
		compileTask.compilerArgs.add("-DBT_USE_INVERSE_DYNAMICS_WITH_BULLET2")

		if (targetPlatform.targetMachine.operatingSystemFamily.isMacOs()) {
			lcompileTask.compilerArgs.add("-I$rootDir/natives/jni-headers/mac/")
		} else if (targetPlatform.targetMachine.operatingSystemFamily.isLinux()) {
			compileTask.compilerArgs.add("-I$rootDir/natives/jni-headers/linux/")
		} else if (targetPlatform.targetMachine.operatingSystemFamily.isWindows()) {
			compileTask.compilerArgs.add("-I$rootDir/natives/jni-headers/win32/")
		}
	}
	publicHeaders.from = ["jni-headers", "$rootDir/build/swig", "bullet", "custom", "extras/Serialize", "extras"]
	source.from = ["$rootDir/natives", "$rootDir/build/swig"]
	buildDir = "$rootDir/build/natives"
}




// BulletSharedLibrary dependsOn ':swig-src:Swig'

