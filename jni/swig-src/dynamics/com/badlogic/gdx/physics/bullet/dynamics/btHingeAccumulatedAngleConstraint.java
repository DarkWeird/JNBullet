/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet.dynamics;

import com.badlogic.gdx.physics.bullet.BulletBase;
import com.badlogic.gdx.physics.bullet.linearmath.*;
import com.badlogic.gdx.physics.bullet.collision.*;
import org.terasology.math.geom.Vector3f;
import org.terasology.math.geom.Quat4f;
import org.terasology.math.geom.Matrix3f;
import org.terasology.math.geom.Matrix4f;

public class btHingeAccumulatedAngleConstraint extends btHingeConstraint {
	private long swigCPtr;
	
	protected btHingeAccumulatedAngleConstraint(final String className, long cPtr, boolean cMemoryOwn) {
		super(className, DynamicsJNI.btHingeAccumulatedAngleConstraint_SWIGUpcast(cPtr), cMemoryOwn);
		swigCPtr = cPtr;
	}
	
	/** Construct a new btHingeAccumulatedAngleConstraint, normally you should not need this constructor it's intended for low-level usage. */
	public btHingeAccumulatedAngleConstraint(long cPtr, boolean cMemoryOwn) {
		this("btHingeAccumulatedAngleConstraint", cPtr, cMemoryOwn);
		construct();
	}
	
	@Override
	protected void reset(long cPtr, boolean cMemoryOwn) {
		if (!destroyed)
			destroy();
		super.reset(DynamicsJNI.btHingeAccumulatedAngleConstraint_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);
	}
	
	public static long getCPtr(btHingeAccumulatedAngleConstraint obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	@Override
	protected void finalize() throws Throwable {
		if (!destroyed)
			destroy();
		super.finalize();
	}

  @Override protected synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				DynamicsJNI.delete_btHingeAccumulatedAngleConstraint(swigCPtr);
			}
			swigCPtr = 0;
		}
		super.delete();
	}

  public btHingeAccumulatedAngleConstraint(btRigidBody rbA, btRigidBody rbB, Vector3f pivotInA, Vector3f pivotInB, Vector3f axisInA, Vector3f axisInB, boolean useReferenceFrameA) {
    this(DynamicsJNI.new_btHingeAccumulatedAngleConstraint__SWIG_0(btRigidBody.getCPtr(rbA), rbA, btRigidBody.getCPtr(rbB), rbB, pivotInA, pivotInB, axisInA, axisInB, useReferenceFrameA), true);
  }

  public btHingeAccumulatedAngleConstraint(btRigidBody rbA, btRigidBody rbB, Vector3f pivotInA, Vector3f pivotInB, Vector3f axisInA, Vector3f axisInB) {
    this(DynamicsJNI.new_btHingeAccumulatedAngleConstraint__SWIG_1(btRigidBody.getCPtr(rbA), rbA, btRigidBody.getCPtr(rbB), rbB, pivotInA, pivotInB, axisInA, axisInB), true);
  }

  public btHingeAccumulatedAngleConstraint(btRigidBody rbA, Vector3f pivotInA, Vector3f axisInA, boolean useReferenceFrameA) {
    this(DynamicsJNI.new_btHingeAccumulatedAngleConstraint__SWIG_2(btRigidBody.getCPtr(rbA), rbA, pivotInA, axisInA, useReferenceFrameA), true);
  }

  public btHingeAccumulatedAngleConstraint(btRigidBody rbA, Vector3f pivotInA, Vector3f axisInA) {
    this(DynamicsJNI.new_btHingeAccumulatedAngleConstraint__SWIG_3(btRigidBody.getCPtr(rbA), rbA, pivotInA, axisInA), true);
  }

  public btHingeAccumulatedAngleConstraint(btRigidBody rbA, btRigidBody rbB, Matrix4f rbAFrame, Matrix4f rbBFrame, boolean useReferenceFrameA) {
    this(DynamicsJNI.new_btHingeAccumulatedAngleConstraint__SWIG_4(btRigidBody.getCPtr(rbA), rbA, btRigidBody.getCPtr(rbB), rbB, rbAFrame, rbBFrame, useReferenceFrameA), true);
  }

  public btHingeAccumulatedAngleConstraint(btRigidBody rbA, btRigidBody rbB, Matrix4f rbAFrame, Matrix4f rbBFrame) {
    this(DynamicsJNI.new_btHingeAccumulatedAngleConstraint__SWIG_5(btRigidBody.getCPtr(rbA), rbA, btRigidBody.getCPtr(rbB), rbB, rbAFrame, rbBFrame), true);
  }

  public btHingeAccumulatedAngleConstraint(btRigidBody rbA, Matrix4f rbAFrame, boolean useReferenceFrameA) {
    this(DynamicsJNI.new_btHingeAccumulatedAngleConstraint__SWIG_6(btRigidBody.getCPtr(rbA), rbA, rbAFrame, useReferenceFrameA), true);
  }

  public btHingeAccumulatedAngleConstraint(btRigidBody rbA, Matrix4f rbAFrame) {
    this(DynamicsJNI.new_btHingeAccumulatedAngleConstraint__SWIG_7(btRigidBody.getCPtr(rbA), rbA, rbAFrame), true);
  }

  public float getAccumulatedHingeAngle() {
    return DynamicsJNI.btHingeAccumulatedAngleConstraint_getAccumulatedHingeAngle(swigCPtr, this);
  }

  public void setAccumulatedHingeAngle(float accAngle) {
    DynamicsJNI.btHingeAccumulatedAngleConstraint_setAccumulatedHingeAngle(swigCPtr, this, accAngle);
  }

}
